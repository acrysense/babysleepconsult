"use strict";

function _toConsumableArray(arr) { return _arrayWithoutHoles(arr) || _iterableToArray(arr) || _unsupportedIterableToArray(arr) || _nonIterableSpread(); }
function _nonIterableSpread() { throw new TypeError("Invalid attempt to spread non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method."); }
function _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === "string") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === "Object" && o.constructor) n = o.constructor.name; if (n === "Map" || n === "Set") return Array.from(o); if (n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }
function _iterableToArray(iter) { if (typeof Symbol !== "undefined" && iter[Symbol.iterator] != null || iter["@@iterator"] != null) return Array.from(iter); }
function _arrayWithoutHoles(arr) { if (Array.isArray(arr)) return _arrayLikeToArray(arr); }
function _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) arr2[i] = arr[i]; return arr2; }
document.addEventListener('DOMContentLoaded', function () {
  // checker
  var useItemChecker = function useItemChecker(els, onClickOutside) {
    var checkBodyClick = function checkBodyClick(e) {
      var currentEl = e.target;
      while (currentEl) {
        if (els.includes(currentEl)) break;
        currentEl = currentEl.parentNode;
      }
      if (!currentEl) {
        onClickOutside();
        removeBodyChecker();
      }
    };
    function setBodyChecker() {
      document.documentElement.addEventListener('click', checkBodyClick);
    }
    function removeBodyChecker() {
      document.documentElement.removeEventListener('click', checkBodyClick);
    }
    return {
      setBodyChecker: setBodyChecker,
      removeBodyChecker: removeBodyChecker
    };
  };

  // slides up/down/toggle
  var slideUpQna = function slideUpQna(target) {
    var duration = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 400;
    target.style.transitionProperty = 'height, margin, padding';
    target.style.transitionDuration = duration + 'ms';
    target.style.height = target.offsetHeight + 'px';
    target.offsetHeight;
    target.style.overflow = 'hidden';
    target.style.height = 0;
    target.style.paddingTop = 0;
    target.style.paddingBottom = 0;
    target.style.marginTop = 0;
    target.style.marginBottom = 0;
    if (target.previousElementSibling) {
      target.previousElementSibling.style.pointerEvents = 'none';
    }
    window.setTimeout(function () {
      target.style.display = 'none';
      target.style.removeProperty('height');
      target.style.removeProperty('padding-top');
      target.style.removeProperty('padding-bottom');
      target.style.removeProperty('margin-top');
      target.style.removeProperty('margin-bottom');
      target.style.removeProperty('overflow');
      target.style.removeProperty('transition-duration');
      target.style.removeProperty('transition-property');
      if (target.previousElementSibling) {
        target.previousElementSibling.style.pointerEvents = 'auto';
      }
    }, duration);
    target.parentNode.classList.remove('is--open');
  };
  var slideDownQna = function slideDownQna(target) {
    var duration = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 400;
    target.style.removeProperty('display');
    var display = window.getComputedStyle(target).display;
    if (display === 'none') display = 'block';
    target.style.display = display;
    var height = target.offsetHeight;
    target.style.overflow = 'hidden';
    target.style.height = 0;
    target.style.paddingTop = 0;
    target.style.paddingBottom = 0;
    target.style.marginTop = 0;
    target.style.marginBottom = 0;
    target.offsetHeight;
    target.style.transitionProperty = "height, margin, padding";
    target.style.transitionDuration = duration + 'ms';
    target.style.height = height + 'px';
    target.style.removeProperty('padding-top');
    target.style.removeProperty('padding-bottom');
    target.style.removeProperty('margin-top');
    target.style.removeProperty('margin-bottom');
    if (target.previousElementSibling) {
      target.previousElementSibling.style.pointerEvents = 'none';
    }
    window.setTimeout(function () {
      target.style.removeProperty('height');
      target.style.removeProperty('overflow');
      target.style.removeProperty('transition-duration');
      target.style.removeProperty('transition-property');
      if (target.previousElementSibling) {
        target.previousElementSibling.style.pointerEvents = 'auto';
      }
    }, duration);
    target.parentNode.classList.add('is--open');
  };
  var slideToggleQna = function slideToggleQna(target) {
    var duration = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 400;
    if (window.getComputedStyle(target).display === 'none') {
      return slideDownQna(target, duration);
    } else {
      return slideUpQna(target, duration);
    }
  };

  // accordeon
  var accordeonTrigger = document.querySelectorAll('.c-accordeon__trigger');
  if (accordeonTrigger) {
    accordeonTrigger.forEach(function (item) {
      item.addEventListener('click', function (event) {
        event.preventDefault();
        if (!item.parentNode.classList.contains('is--open')) {
          slideDownQna(item.nextElementSibling);
        } else {
          slideUpQna(item.nextElementSibling);
        }
      });
    });
  }

  // mobile menu
  var mobileMenu = document.getElementById('menu');
  var mobileMenuTrigger = document.getElementById('hamburger-toggle');
  if (mobileMenu && mobileMenuTrigger) {
    mobileMenuTrigger.addEventListener('click', function (event) {
      event.preventDefault();
      if (mobileMenu.classList.contains('is--active')) {
        mobileMenuTrigger.classList.remove('is--active');
        mobileMenu.classList.remove('is--active');
        document.body.classList.remove('scroll-disabled');
      } else {
        mobileMenuTrigger.classList.add('is--active');
        mobileMenu.classList.add('is--active');
        document.body.classList.add('scroll-disabled');
      }
    });
  }

  // iframe loading
  var iframeMedia = document.querySelectorAll('.js-media');
  if (iframeMedia) {
    iframeMedia.forEach(function (item) {
      item.addEventListener('click', function (event) {
        event.preventDefault();
        if (!item.classList.contains('is--active')) {
          item.classList.add('is--active');
          var frame = item.querySelector('iframe');
          var link = frame.dataset.src + '&autoplay=1';
          frame.setAttribute('src', link);
          frame.removeAttribute('data-src');
          setTimeout(function () {
            item.querySelector('.js-media-loader').classList.add('is--hidden');
          }, 5000);
        }
      });
    });
  }

  // profession tabs
  var professionTabsItems = document.querySelectorAll('.profession-tabs__item');
  var autoSwitchInterval;
  var userClicked = false;
  function activateTab(index) {
    var parent = professionTabsItems[0].closest('.profession-tabs');
    parent.querySelectorAll('.profession-tabs__item').forEach(function (child) {
      return child.classList.remove('is--active');
    });
    parent.querySelectorAll('.profession-tabs__wrapper').forEach(function (child) {
      return child.classList.remove('is--active');
    });
    professionTabsItems[index].classList.add('is--active');
    parent.querySelectorAll('.profession-tabs__wrapper')[index].classList.add('is--active');
  }
  function startAutoSwitch() {
    var currentIndex = 0;
    autoSwitchInterval = setInterval(function () {
      if (!userClicked) {
        activateTab(currentIndex);
        currentIndex = (currentIndex + 1) % professionTabsItems.length;
      }
    }, 2000);
  }
  if (professionTabsItems) {
    professionTabsItems.forEach(function (item, i) {
      item.addEventListener('click', function () {
        if (!userClicked) {
          userClicked = true;
          clearInterval(autoSwitchInterval);
        }
        var parent = item.closest('.profession-tabs');
        parent.querySelectorAll('.profession-tabs__item').forEach(function (child) {
          return child.classList.remove('is--active');
        });
        parent.querySelectorAll('.profession-tabs__wrapper').forEach(function (child) {
          return child.classList.remove('is--active');
        });
        item.classList.add('is--active');
        parent.querySelectorAll('.profession-tabs__wrapper')[i].classList.add('is--active');
      });
    });
    startAutoSwitch();
  }

  // programs tabs
  var programsPaymentTabsItems = document.querySelectorAll('.programs-payment-tabs__item');
  if (programsPaymentTabsItems) {
    programsPaymentTabsItems.forEach(function (item, i) {
      item.addEventListener('click', function () {
        var parent = item.closest('.programs-payment-tabs');
        parent.querySelectorAll('.programs-payment-tabs__item').forEach(function (child) {
          return child.classList.remove('is--active');
        });
        parent.querySelectorAll('.programs-payment-tabs__wrapper').forEach(function (child) {
          return child.classList.remove('is--active');
        });
        item.classList.add('is--active');
        var el = parent.querySelector('.is--active');
        var index = _toConsumableArray(parent.querySelectorAll('.programs-payment-tabs__item')).indexOf(el);
        parent.querySelectorAll('.programs-payment-tabs__wrapper')[index].classList.add('is--active');
      });
    });
  }

  // select
  var selected = document.querySelectorAll('.select-box__selected');
  var optionsList = document.querySelectorAll('.select-box__option');
  if (selected) {
    selected.forEach(function (item) {
      var close = function close() {
        document.querySelectorAll('.select-box__container').forEach(function (child) {
          child.classList.remove('select-box__container--active');
          child.removeAttribute('style');
        });
        document.querySelectorAll('.select-box__selected').forEach(function (child) {
          return child.classList.remove('select-box__selected--active');
        });
      };
      var itemChecker = useItemChecker([item.parentNode].concat(_toConsumableArray(selected)), close);
      item.addEventListener('click', function () {
        var container = item.previousElementSibling;
        if (container.classList.contains('select-box__container--active')) {
          close();
        } else {
          close();
          container.classList.add('select-box__container--active');
          item.classList.add('select-box__selected--active');
          itemChecker.setBodyChecker();
        }
      });
    });
  }
  if (optionsList) {
    optionsList.forEach(function (option) {
      option.addEventListener('click', function (event) {
        event.preventDefault();
        var parent = option.closest('.select-box');
        var currentContainer = parent.querySelector('.select-box__container');
        var currentSelected = parent.querySelector('.select-box__selected');
        var currentSelectedPlaceholder = currentSelected.querySelector('.select-box__placeholder');
        var currentSelectedValue = currentSelected.querySelector('.select-box__values');
        if (option.querySelector('input').checked) {
          return false;
        } else {
          option.querySelector('input').checked = true;
        }
        if (currentSelectedPlaceholder.classList.contains('select-box__placeholder--active')) {
          currentSelectedPlaceholder.classList.remove('select-box__placeholder--active');
          currentSelectedValue.classList.add('select-box__values--active');
        }
        currentSelectedValue.innerHTML = option.querySelector('.select-box__title').innerHTML;
        currentContainer.classList.remove('select-box__container--active');
        currentSelected.classList.remove('select-box__selected--active');
      });
    });
  }

  // top banner
  var topBanner = document.querySelector('.top-banner');
  var topBannerClose = document.querySelector('.top-banner__close');
  if (topBanner && topBannerClose) {
    topBannerClose.addEventListener('click', function (event) {
      event.preventDefault();
      if (!topBanner.classList.contains('is--hidden')) {
        topBanner.classList.add('is--hidden');
      }
    });
  }

  // webinar
  var webinarTrigger = document.getElementById('webinar-trigger');
  if (webinarTrigger) {
    var parent = webinarTrigger.closest('.webinar__wrapper');
    var popup = parent.querySelector('.webinar__popup');
    parent.style.minHeight = popup.getBoundingClientRect().height + 'px';
    webinarTrigger.addEventListener('click', function (event) {
      event.preventDefault();
      if (!parent.classList.contains('is--active')) {
        parent.classList.add('is--active');
      }
    });
  }

  // profession slider
  var professionSlider = document.querySelectorAll('.profession__slider .swiper');
  if (professionSlider) {
    professionSlider.forEach(function (slider) {
      var myProfessionSlider = new Swiper(slider, {
        slidesPerView: 1,
        loop: true,
        navigation: {
          prevEl: slider.closest('.profession__slider').querySelector('.swiper-button-prev'),
          nextEl: slider.closest('.profession__slider').querySelector('.swiper-button-next')
        }
      });
      myProfessionSlider.on('slideChange', function () {
        if (!userClicked) {
          userClicked = true;
          clearInterval(autoSwitchInterval);
        }
      });
    });
  }

  // reviews slider
  var reviewsSlider = document.querySelectorAll('.reviews__slider .swiper');
  if (reviewsSlider) {
    reviewsSlider.forEach(function (slider) {
      var myReviewsSlider = new Swiper(slider, {
        slidesPerView: 3,
        spaceBetween: 40,
        breakpoints: {
          0: {
            slidesPerView: 'auto',
            spaceBetween: 10
          },
          768: {
            slidesPerView: 2,
            spaceBetween: 20
          },
          1200: {
            slidesPerView: 3,
            spaceBetween: 40
          }
        }
      });
    });
  }
  var targetSection = document.querySelector('.statistics');
  var numberWrapper = document.getElementById('statistics-number');
  var numberElement = numberWrapper.querySelector('.number');
  var observer;
  if (targetSection) {
    var increaseNumber = function increaseNumber() {
      var currentNumber = parseInt(numberElement.textContent.replace(/\s/g, ''), 10);
      var newNumber = currentNumber + 1;
      var formattedNumber = formatNumber(newNumber);
      animateNumberChange(formattedNumber);
    };
    var formatNumber = function formatNumber(number) {
      return number.toString().replace(/\B(?=(\d{3})+(?!\d))/g, ' ');
    };
    var animateNumberChange = function animateNumberChange(newNumber) {
      var currentNumberString = numberElement.textContent;
      var newNumberString = newNumber;
      numberWrapper.innerHTML = '';
      for (var i = 0; i < newNumberString.length; i++) {
        var newDigit = document.createElement('span');
        newDigit.classList.add('number-delimiter');
        newDigit.textContent = newNumberString[i];
        if (currentNumberString[i] !== newNumberString[i]) {
          var oldDigit = document.createElement('span');
          oldDigit.classList.add('number');
          oldDigit.textContent = currentNumberString[i] || '';
          oldDigit.style.position = 'absolute';
          oldDigit.style.animation = 'slide-up 0.5s forwards';
          numberWrapper.appendChild(oldDigit);
          newDigit.style.position = 'relative';
          newDigit.style.animation = 'slide-down 0.5s';
        }
        numberWrapper.appendChild(newDigit);
      }
    };
    var onIntersection = function onIntersection(entries) {
      entries.forEach(function (entry) {
        if (entry.isIntersecting) {
          increaseNumber();
          observer.disconnect();
        }
      });
    };
    observer = new IntersectionObserver(onIntersection, {
      threshold: 0.75
    });
    observer.observe(targetSection);
  }
});